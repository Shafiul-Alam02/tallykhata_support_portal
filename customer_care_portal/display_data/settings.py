"""
Django settings for display_data project.

Generated by 'django-admin startproject' using Django 4.1.

For more information on this file, see
https://docs.djangoproject.com/en/4.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.1/ref/settings/
"""

from pathlib import Path
import os
from django.contrib.messages import constants as messages
import mimetypes


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = ''

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True


ALLOWED_HOSTS = ['','supportportal.tallykhata.com', 'localhost','127.0.0.1']

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'display_data_app',
    'django.contrib.humanize',
    'corsheaders',
    'crispy_forms',
    "crispy_bootstrap5",
    'rest_framework',
    'rest_framework_simplejwt.token_blacklist',
    'rest_framework.authtoken'
]

OTP_TOTP_ISSUER = 'display_data_app'

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'display_data_app.middleware.MyMiddleware',
    #'display_data_app.middleware.RedirectToOTPAuthenticationMiddleware',
]

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework_simplejwt.authentication.JWTAuthentication',
        'rest_framework.authentication.TokenAuthentication',
    ),
}

# Configure JWT settings if needed
from datetime import timedelta
SIMPLE_JWT = {
    'ACCESS_TOKEN_LIFETIME': timedelta(minutes=30),
    'REFRESH_TOKEN_LIFETIME': timedelta(days=1),
    'ROTATE_REFRESH_TOKENS': False,
    'BLACKLIST_AFTER_ROTATION': True,
}


ROOT_URLCONF = 'display_data.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates'),
                 os.path.join(BASE_DIR, 'display_data_app', 'templates', 'display_data_app'),],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'display_data.wsgi.application'

if DEBUG == True:
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.postgresql',
            'NAME': 'support_portal',
            'USER': 'support_portal',
            'PASSWORD': '123456789',
            'HOST': 'localhost',
            'PORT': '5432',
        }
    }
else:
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.postgresql',
            'NAME': 'support_portal',
            'USER': 'support_portal',
            'PASSWORD': 'password',
            'HOST': 'localhost',
            'PORT': '5432',
        }
    }

# Password validation
# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Messages tags for HTML
MESSAGE_TAGS = {
        messages.DEBUG: 'alert-secondary',
        messages.INFO: 'alert-info',
        messages.SUCCESS: 'alert-success',
        messages.WARNING: 'alert-warning',
        messages.ERROR: 'alert-danger',
 }

# Internationalization
# https://docs.djangoproject.com/en/4.1/topics/i18n/

LANGUAGE_CODE = 'en-us'
TIME_ZONE = 'Asia/Dhaka'
USE_I18N = True
USE_TZ = True

STATIC_URL = 'static/'
MEDIA_ROOT= os.path.join(BASE_DIR, "media")
MEDIA_URL="/media/"
LOGIN_REDIRECT_URL = 'otp_authentication'
LOGIN_URL = 'login'
LOGOUT_REDIRECT_URL = 'logout'
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
mimetypes.add_type("text/css", ".css", True)

#Auto logout feature
SESSION_EXPIRE_AT_BROWSER_CLOSE = True     # This will log you out when browser is closed
SESSION_COOKIE_AGE = 2700                  # 1800 seconds for 30 minutes
SESSION_SAVE_EVERY_REQUEST = True          # Will prevent from logging you out after 30 minutes if a new activity is registered

#EMAIL DETAILS
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = 'email'  # Your Gmail address
EMAIL_HOST_PASSWORD = 'password'     # Your Gmail password or App password


CORS_ALLOWED_ORIGINS = [
    'https://supportportal.tallykhata.com',
    'https://web.tallykhata.com'
    # Add other allowed origins as needed
]

CSRF_TRUSTED_ORIGINS = ['https://supportportal.tallykhata.com']
# Configure OTP backend
OTP_REQUIRED = True  # Set to True to require OTP for all users
OTP_BACKEND = {
    'AUTHENTICATION_BACKEND': 'otp.backend.TOTPBackend',
}

CRISPY_TEMPLATE_PACK = 'bootstrap5'
CRISPY_ALLOWED_TEMPLATE_PACKS = "bootstrap5"


